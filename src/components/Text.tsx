import React, { useEffect, useState } from "react";

const Text = () => {
  const [text, setText] = useState("");
  const [index, setIndex] = useState(0);
  const [isDeleting, setIsDeleting] = useState(false);
  const words = [
    "·É¶·≠Ñüíñ‡¶Ü‡¶∏‡¶õ‡ßá ‡¶à‡¶¶ ‚ò∫Ô∏è·É¶·≠Ñ ",
    "‡ºÜüöô‡¶ö‡¶≤‡¶õ‡ßá ‡¶ó‡¶æ‡¶°‡¶º‡¶øüèçÔ∏è·É¶·≠Ñ",
    "‡ºÜ‡ºÜüòÅ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶¶‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶§üçï‡ºÜ‡ºÜ",
    "‡ºé‚ù•üòÅ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶°‡¶º‡¶øüè©‡ºé‚ù•",
    "ùÑû‚ãÜ‚Éù !‡ºÖ‡ºéüò≠‡¶ì‡¶π sorryüíîùÑû‚ãÜ‚Éù !‡ºÖ‡ºé",
    "ÍßÅ¬ß‡º∫üè¢‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶°‡¶º‡¶øüöô‡ºª¬ßÍßÇ",
    "·É¶·≠Ñ‚òÅÔ∏è‡¶π‡¶ø‡¶Æ‡ßá‡¶≤ ‡¶π‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‚òÅÔ∏è·É¶·≠Ñ",
    "‡ºé!‡ºÖ‡ºéüå§Ô∏è‡¶ó‡¶∞‡¶Æ ‡¶¶‡¶ø‡¶®üî•!‡ºÖ‡ºé",
    "ùÑûùÑûùÑûü•∞‡¶¶‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ‡¶§ ‡¶¶‡¶ø‡¶≤‡¶æ‡¶ÆüôÉùÑûùÑûùÑû‡ºé",
    "ÍßÅ¬ß‡º∫‚ù§Ô∏èüß°üíõ‡¶Ö‡¶ó‡ßç‡¶∞‡¶ø‡¶Æüíúüíôüíö‡ºª¬ßÍßÇ",
    "‡ºé·É¶·≠Ñüöô‡¶Ü‡¶∏‡¶¨‡ßá ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅüòåüòå·É¶·≠Ñ",
    "ùÑû‚ãÜ !‡ºÖ‡ºéü•∞üíñ‡¶à‡¶¶‡ßá‡¶∞ ‡¶¶‡¶ø‡¶®üíñü•∞‡ºé",
  ];
  const typingSpeed = 70;
  const deletionSpeed = 50;
  const visibilityTime = 1800; 

  useEffect(() => {
    const handleTyping = () => {
      const currentWord = words[index];
      if (currentWord !== undefined) {
        const currentLength = text.length;
        const targetLength = isDeleting ? 0 : currentWord.length;

        if (currentLength !== targetLength) {
          
          setText(isDeleting ? currentWord.substring(0, currentLength - 1) : currentWord.substring(0, currentLength + 1));
        } else {
         
          setTimeout(() => setIsDeleting(!isDeleting), visibilityTime);
        }
      }
    };

    const timeout = setTimeout(handleTyping, isDeleting ? deletionSpeed : typingSpeed);
    return () => clearTimeout(timeout);
  }, [index, text, isDeleting]);

  useEffect(() => {
    const timeout = setTimeout(() => setIndex((prevIndex) => (prevIndex === words.length - 1 ? 0 : prevIndex + 1)), visibilityTime);
    return () => clearTimeout(timeout);
  }, [index]);

  return (
    <div className="App flex justify-center">
      <h1 style={{ paddingTop: "5rem", margin: "auto 0", fontWeight: "normal" }}>
        `‡¶à‡¶¶‡ßá‡¶∞ ‡¶Ü‡¶ó‡¶Æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ 
       <br />
        {text && (
          <span style={{ color: "white", fontWeight: "bold" }}>{text}</span>
        )}
        !`
      </h1>
    </div>
  );
};

export default Text;
